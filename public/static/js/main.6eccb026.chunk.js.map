{"version":3,"sources":["query/query.js","components/Launch.js","components/Loading.js","components/Launches.js","components/Navbar.js","components/LaunchDetail.js","App.js","index.js"],"names":["getAllLaunches","gql","getSingleLaunch","Launch","id","date","success","name","img","detail","className","style","width","height","objectFit","src","alt","to","Loading","Launches","useQuery","data","loading","error","launches","map","launch","flight_number","launch_date_utc","slice","launch_success","mission_name","links","mission_patch","details","Navbar","LaunchDetail","match","variables","params","rocket","rocket_id","rocket_name","rocket_type","article_link","video_link","wikipedia","App","exact","path","component","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eccb026.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\"\n// query to get all launches\n\nexport const getAllLaunches = gql`\n{\n    launches{\n        flight_number\n        mission_name\n\t\tlaunch_date_utc\n        launch_year\n        launch_success\n        details\n        links{\n            mission_patch\n        }\n    }\n}\n`\n\n\nexport const getSingleLaunch = gql`\nquery launch($id: ID!){\n    launch(id: $id){\n        flight_number\n        mission_name\n        launch_date_utc\n        launch_success\n        details\n        rocket{\n          rocket_id\n          rocket_name\n          rocket_type\n        }\n        links{\n          mission_patch\n          article_link\n          wikipedia\n          video_link\n        }\n    }\n}\n`","import React from 'react'\nimport { Link } from \"react-router-dom\"\nconst Launch = ({ id, date, success, name, img, detail }) => {\n    const height = {\n        width: \"100%\",\n        height: \"15vw\",\n        objectFit: \"cover\"\n    }\n    return (\n        <>\n            <div className=\"card bg-dark text-light border\">\n                <img style={height} className=\"card-img-top img-fluid\" src={img} alt=\"\" />\n                <div className=\"card-body\">\n                    <h4 className={`card-title ${success ? \"text-success\" : \"text-danger\"}`}>{name}</h4>\n                    <span>Date: {date}</span>\n                    <p className=\"card-text text-truncate\">{detail}</p>\n                    <Link to={`/launch/${id}`} className=\"btn btn-dark border\">Detail</Link>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Launch\n","import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div className=\"minHeight\">\n            <img src=\"/giphy.gif\" alt=\"Loading....\" className=\"d-block mx-auto\" />\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { getAllLaunches } from \"../query/query\"\nimport Launch from './Launch'\nimport Loading from \"./Loading\"\nconst Launches = () => {\n    const { data, loading, error } = useQuery(getAllLaunches)\n\n    if (loading) return <Loading />\n    if (error) return <p>{error}</p>\n    return (\n        <div className=\"card-columns\">\n            {data.launches.map(launch => (\n                <Launch\n                    key={launch.launch_date_utc + launch.flight_number}\n                    id={launch.flight_number}\n                    date={launch.launch_date_utc.slice(0, 10)}\n                    success={launch.launch_success}\n                    name={launch.mission_name}\n                    img={launch.links.mission_patch}\n                    detail={launch.details}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Launches\n","import React from 'react'\n\nconst Navbar = () => {\n    return (\n        <div className=\"bg-dark\">\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"navbar text-center text-light\">Space X</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { getSingleLaunch } from \"../query/query\"\nimport Loading from \"./Loading\"\nconst LaunchDetail = ({ match }) => {\n    const { data, error, loading } = useQuery(getSingleLaunch, {\n        variables: { id: match.params.id }\n    })\n\n    if (loading) return <Loading />\n    if (error) return <p>{error}</p>\n    // console.log(data.launch)\n    const { details, flight_number, launch_date_utc, launch_success, links, mission_name, rocket } = data.launch\n    const { rocket_id, rocket_name, rocket_type } = rocket\n    const { article_link, mission_patch, video_link, wikipedia } = links\n    return (\n        <div className=\"text-light mt-2 minHeight\">\n            <Link to=\"/\" className=\"btn btn-dark border\">Back</Link>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                    <img src={links.mission_patch} width=\"80%\" height=\"80%\" alt=\"\" />\n                </div>\n                <div className=\"col-12 col-md-6\">\n                    <div className=\"card bg-dark text-light\">\n                        <div className=\"card-header\">\n                            <span className=\"heading\">Mission Name:</span> <span className={`${launch_success ? \"text-success\" : \"text-danger\"}`}>{mission_name}</span>\n                            <span className=\"float-right\">{launch_success ? \"Launch Succeeded\" : \"Launch Failed\"} </span>\n                        </div>\n                        <div className=\"card-title pl-2\">\n                            <span className=\"heading\">Flight Detail</span>\n                            <p>{details}</p>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"card-title px-3\">\n                                <span className=\"heading\">\n                                    Flight Number\n                               </span>\n                                <p>{flight_number}</p>\n                            </div>\n                            <div className=\"card-title px-3\">\n                                <span className=\"heading\">\n                                    Flight Launch Date\n                            </span>\n                                <p>{launch_date_utc.slice(0, 10)}</p>\n                            </div>\n                            <div className=\"card-title px-3\">\n                                <span className=\"heading\">\n                                    Rocket Detail\n                            </span>\n                                <p><span className=\"heading1\">Rocket ID:</span> {rocket_id}</p>\n                                <p><span className=\"heading1\">Rocket Name:</span> {rocket_name}</p>\n                                <p><span className=\"heading1\">Rocket Type:</span> {rocket_type}</p>\n                            </div>\n\n                            <div className=\"card-title px-3\">\n                                <span className=\"heading\">\n                                    Important Links\n                                </span>\n                                <p><span className=\"heading1\">Article Link:</span> {article_link}</p>\n                                <p><span className=\"heading1\">\n                                    Mission Patch:</span> {mission_patch}</p>\n                                <p><span className=\"heading1\">\n                                    Wikipedia: </span>{wikipedia}</p>\n                                <p><span className=\"heading1\">Video Link:</span> {video_link}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LaunchDetail\n","import React from 'react'\nimport Launches from './components/Launches'\nimport Navbar from './components/Navbar'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LaunchDetail from './components/LaunchDetail'\n\nconst App = () => {\n    return (\n        <div className=\"bg-dark\">\n            <Navbar />\n            <div className=\"container my-3\">\n                <Router >\n                    <Switch>\n                        <Route exact path=\"/\" component={Launches} />\n                        <Route exact path=\"/launch/:id\" component={LaunchDetail} />\n                    </Switch>\n                </Router>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\"\n\nconst client = new ApolloClient({\n    uri: \"/graphql\",\n    cache: new InMemoryCache()\n})\n\nReactDOM.render(\n    <React.StrictMode>\n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}